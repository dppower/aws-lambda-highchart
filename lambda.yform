AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Outputs:
  ApiKeyLocation:
    Description: The location of the api key needed to make requests, set header "x-api-key"
      to value provided there
    Value: 
      Fn::Sub: https://${AWS::Region}.console.aws.amazon.com/apigateway/home#/api-keys/${APIKey}
  SaveChartUrl:
    Description: The url to make requests
    Value:
      Fn::Join:
      - ''
      - - https://
        - Ref: RestApi
        - .execute-api.
        - Ref: AWS::Region
        - .amazonaws.com
        - /dev/save-chart

Parameters:
  APIName:
    AllowedPattern: ^[a-zA-Z][a-zA-Z0-9]*$
    Description: Name of the API
    MaxLength: '20'
    MinLength: '3'
    Type: String
  ChartOutputBucket:
    Type: String
    Description: The name of the bucket to save charts
  InputsBucket:
    Type: String
    Description: The bucket name containing the lambda package and api definition yaml file
  CodePackage:
    Type: String
    Description: The name of the lambda package <path>/<package-name>
  ApiDefintion:
    Type: String
    Description: The name of the api defintion yaml file

Resources:
  PhantomLambda:
    Type: AWS::Serverless::Function
    Properties:
        Handler: "src/index.handler"
        Runtime: nodejs8.10
        Policies:
          - AmazonS3FullAccess
        Timeout: 10
        MemorySize: 512     
        CodeUri:
          Bucket: !Ref InputsBucket
          Key: !Ref CodePackage
        Environment:
          Variables:
            BUCKETNAME: !Ref ChartOutputBucket

  LambdaPermissions:
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - PhantomLambda
        - Arn
      Principal: apigateway.amazonaws.com
    Type: AWS::Lambda::Permission

  RestApi:
    Properties:
      BodyS3Location:
        Bucket: !Ref InputsBucket
        Key: !Ref ApiDefintion
      EndpointConfiguration:
        Types:
        - EDGE
    Type: AWS::ApiGateway::RestApi

  APIKey:
    Properties:
      Enabled: true
      Name:
        Fn::Sub: ${AWS::StackName}-${APIName}-Key
    Type: AWS::ApiGateway::ApiKey

  UsagePlan:
    Properties:
      ApiStages:
      - ApiId:
          Ref: RestApi
        Stage:
          Ref: DevelopmentStage
      Quota:
        Limit: 1000000
        Period: MONTH
      Throttle:
        BurstLimit: 200
        RateLimit: 100
      UsagePlanName:
        Fn::Sub: ${AWS::StackName}-${APIName}-DeveloperUsage
    Type: AWS::ApiGateway::UsagePlan

  UsagePlanKey:
    Properties:
      KeyId:
        Ref: APIKey
      KeyType: API_KEY
      UsagePlanId:
        Ref: UsagePlan
    Type: AWS::ApiGateway::UsagePlanKey

  Deployment:
    Properties:
      RestApiId:
        Ref: RestApi
      StageName: default
    Type: AWS::ApiGateway::Deployment

  DevelopmentStage:
    Properties:
      DeploymentId:
        Ref: Deployment
      RestApiId:
        Ref: RestApi
      StageName: dev
    Type: AWS::ApiGateway::Stage